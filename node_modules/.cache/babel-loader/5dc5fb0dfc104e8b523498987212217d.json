{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/terilondon/Desktop/sei_19/react/reacthw/react-quadrants/src/Section.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"./Loader\";\nconst contentStyles = {\n  position: \"relative\",\n  top: \"50%\",\n  transform: \"translateY(-50%)\",\n  margin: \"0 auto\",\n  textAlign: \"center\"\n};\n\nconst getRandomImage = arr => {\n  const rand = Math.random() * arr.length;\n  const index = Math.floor(rand);\n  const url = arr[index].images.preview_gif.url;\n  return url;\n};\n\nclass Section extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\"\n    };\n\n    this.handleOnClick = () => getRandomImage(this.props.apiData);\n\n    this.generateContent = () => {\n      if (!this.state.data && this.props.apiData.length) {\n        getRandomImage(this.props.apiData);\n        return /*#__PURE__*/_jsxDEV(Loader, {\n          styles: contentStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: contentStyles,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"random gif\",\n            src: this.state.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      onClick: this.handleOnClick,\n      children: this.generateContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nSection.propTypes = {\n  apiData: PropTypes.array.isRequired\n};\nexport default Section;","map":{"version":3,"sources":["/Users/terilondon/Desktop/sei_19/react/reacthw/react-quadrants/src/Section.js"],"names":["React","Component","PropTypes","Loader","contentStyles","position","top","transform","margin","textAlign","getRandomImage","arr","rand","Math","random","length","index","floor","url","images","preview_gif","Section","state","data","handleOnClick","props","apiData","generateContent","render","propTypes","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,QAAQ,EAAE,UADW;AAErBC,EAAAA,GAAG,EAAE,KAFgB;AAGrBC,EAAAA,SAAS,EAAE,kBAHU;AAIrBC,EAAAA,MAAM,EAAE,QAJa;AAKrBC,EAAAA,SAAS,EAAE;AALU,CAAtB;;AAQA,MAAMC,cAAc,GAAIC,GAAD,IAAS;AAC/B,QAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgBH,GAAG,CAACI,MAAjC;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAd;AACA,QAAMM,GAAG,GAAGP,GAAG,CAACK,KAAD,CAAH,CAAWG,MAAX,CAAkBC,WAAlB,CAA8BF,GAA1C;AACA,SAAOA,GAAP;AACA,CALD;;AAOA,MAAMG,OAAN,SAAsBpB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC/BqB,KAD+B,GACvB;AACPC,MAAAA,IAAI,EAAE;AADC,KADuB;;AAAA,SAK/BC,aAL+B,GAKf,MAAMd,cAAc,CAAC,KAAKe,KAAL,CAAWC,OAAZ,CALL;;AAAA,SAO/BC,eAP+B,GAOb,MAAM;AACvB,UAAI,CAAC,KAAKL,KAAL,CAAWC,IAAZ,IAAoB,KAAKE,KAAL,CAAWC,OAAX,CAAmBX,MAA3C,EAAmD;AAClDL,QAAAA,cAAc,CAAC,KAAKe,KAAL,CAAWC,OAAZ,CAAd;AACA,4BAAO,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEtB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAHD,MAGO;AACN,4BACC;AAAK,UAAA,KAAK,EAAEA,aAAZ;AAAA,iCACC;AAAK,YAAA,GAAG,EAAC,YAAT;AAAsB,YAAA,GAAG,EAAE,KAAKkB,KAAL,CAAWC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA;AACD,KAlB8B;AAAA;;AAoB/BK,EAAAA,MAAM,GAAG;AACR,wBACC;AAAS,MAAA,SAAS,EAAC,SAAnB;AAA6B,MAAA,OAAO,EAAE,KAAKJ,aAA3C;AAAA,gBACE,KAAKG,eAAL;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AA1B8B;;AA6BhCN,OAAO,CAACQ,SAAR,GAAoB;AACnBH,EAAAA,OAAO,EAAExB,SAAS,CAAC4B,KAAV,CAAgBC;AADN,CAApB;AAIA,eAAeV,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"./Loader\";\n\nconst contentStyles = {\n\tposition: \"relative\",\n\ttop: \"50%\",\n\ttransform: \"translateY(-50%)\",\n\tmargin: \"0 auto\",\n\ttextAlign: \"center\",\n};\n\nconst getRandomImage = (arr) => {\n\tconst rand = Math.random() * arr.length;\n\tconst index = Math.floor(rand);\n\tconst url = arr[index].images.preview_gif.url;\n\treturn url;\n};\n\nclass Section extends Component {\n\tstate = {\n\t\tdata: \"\",\n\t};\n\n\thandleOnClick = () => getRandomImage(this.props.apiData);\n\n\tgenerateContent = () => {\n\t\tif (!this.state.data && this.props.apiData.length) {\n\t\t\tgetRandomImage(this.props.apiData);\n\t\t\treturn <Loader styles={contentStyles} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div style={contentStyles}>\n\t\t\t\t\t<img alt=\"random gif\" src={this.state.data} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<section className=\"section\" onClick={this.handleOnClick}>\n\t\t\t\t{this.generateContent()}\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nSection.propTypes = {\n\tapiData: PropTypes.array.isRequired,\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}